name: Test and Deploy Apify Actor

on:
  workflow_call:
    inputs:
      dir_name: 
        type: string
      event:
        type: string
        description: github event triggerer 
      branch: 
        type: string
      actor_name: 
        type: string

jobs:
  test: 
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.dir_name }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pre-test
        run: |
          echo "Ref/Branch Name: ${{ github.ref_name }}"

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies and run test
        run: |
          npm install
          npm run test    

  deploy: 
    name: Deploy
    runs-on: ubuntu-latest
    needs: 
      - test

    env:
      actor_name: ${{ inputs.actor_name }}

    defaults:
      run:
        working-directory: ./${{ inputs.dir_name }}

    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print module name
        run: |
          echo ${{ inputs.dir_name }}

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install apify-cli
        run: npm install apify-cli -g

      - name: Pre-deploy
        id: pre-deploy
        run: | 
          # Generate tag based on the environment
          tag="stage-$( echo ${{ github.sha }} | cut -c1-7 )"
          if [[ "${{ inputs.event }}" == "push" ]]; then
            tag="latest"
          fi
          
          # Set output
          echo "$tag"
          echo "tag=$tag" >> $GITHUB_OUTPUT

      # TODO: Set secrets
      # - name: Set Secrets

      - name: Deploy actors ${{ needs.test.outputs.dir_name }}
        run: |
          # Apify login
          apify login --token ${{ secrets.APIFY_TOKEN }}

          # Apify push
          apify push ${actor_name} -b ${{ steps.pre-deploy.outputs.tag }} --no-prompt
